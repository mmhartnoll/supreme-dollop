using MindSculptor.DataAccess.Modelled.Records;
using MindSculptor.DataAccess.Modelled.Records.Fields;
using MindSculptor.DataAccess.Modelled.Records.Keys;
using MindSculptor.DataAccess.Modelled.Schemas;

namespace MindSculptor.App.AppDataModel.Schemas.Mtga.Tables
{
    public class DraftPicks : RecordDefinition
    {
        public override Schema Schema => MindSculptorDataModel.Mtga;


        public static readonly IdField Id = new IdField.Definition
        {
            IsAutoGenerated = true,
            IsReadOnly = true
        };

        public static readonly IdField EventEntryId = new IdField.Definition
        {
            MappedField = EventEntries.Id,
            IsReadOnly = true
        };

        public static readonly IntegerField PackNumber = new IntegerField.Definition
        {
            MinimumValue = 1,
            MaximumValue = 3,
            IsReadOnly = true
        };

        public static readonly IntegerField PickNumber = new IntegerField.Definition
        {
            MinimumValue = 1,
            MaximumValue = 15,
            IsReadOnly = true
        };

        public static readonly BooleanField IsFifthCopy = new BooleanField.Definition
        {
            IsReadOnly = true
        };

        public static PrimaryKey PK = new PrimaryKey.Definition
        {
            Fields = Id
        };

        public static UniqueKey UQ = new UniqueKey.Definition
        {
            Fields = FieldReference.List(EventEntryId, PackNumber, PickNumber)
        };

        public static ForeignKey FK = new ForeignKey.Definition
        {
            Fields = EventEntryId,
            ReferencedKey = EventEntries.PK
        };
    }
}
