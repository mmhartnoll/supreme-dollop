using MindSculptor.DataAccess.Modelled.Records;
using MindSculptor.DataAccess.Modelled.Records.Fields;
using MindSculptor.DataAccess.Modelled.Records.Keys;
using MindSculptor.DataAccess.Modelled.Schemas;

namespace MindSculptor.App.AppDataModel.Schemas.Cards.Tables
{
    public class BasePrintings : RecordDefinition
    {
        public override Schema Schema => MindSculptorDataModel.Cards;


        public static IdField Id = new IdField.Definition
        {
            IsAutoGenerated = true,
            IsReadOnly = true
        };

        public static IdField SetInclusionId = new IdField.Definition
        {
            MappedField = SetInclusions.Id,
            IsReadOnly = true
        };

        public static IdField PrintingTypeId = new IdField.Definition
        {
            MappedField = PrintingTypes.Id,
            IsReadOnly = true
        };

        public static IdField ArtistId = new IdField.Definition
        {
            MappedField = Artists.Id,
            IsReadOnly = false
        };

        public static PrimaryKey PK = new PrimaryKey.Definition
        {
            Fields = Id
        };

        public static UniqueKey UQ = new UniqueKey.Definition
        {
            Fields = FieldReference.List(SetInclusionId, PrintingTypeId)
        };

        public static ForeignKey FK1 = new ForeignKey.Definition
        {
            Fields = SetInclusionId,
            ReferencedKey = SetInclusions.PK
        };

        public static ForeignKey FK2 = new ForeignKey.Definition
        {
            Fields = PrintingTypeId,
            ReferencedKey = PrintingTypes.PK
        };

        public static ForeignKey FK3 = new ForeignKey.Definition
        {
            Fields = ArtistId,
            ReferencedKey = Artists.PK
        };
    }
}
