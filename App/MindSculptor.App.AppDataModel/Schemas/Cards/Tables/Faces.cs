using MindSculptor.DataAccess.Modelled.Records;
using MindSculptor.DataAccess.Modelled.Records.Fields;
using MindSculptor.DataAccess.Modelled.Records.Keys;
using MindSculptor.DataAccess.Modelled.Schemas;

namespace MindSculptor.App.AppDataModel.Schemas.Cards.Tables
{
    public class Faces : RecordDefinition
    {
        public override Schema Schema => MindSculptorDataModel.Cards;


        public static readonly IdField Id = new IdField.Definition
        {
            IsAutoGenerated = true,
            IsReadOnly = true
        };

        public static readonly IdField BaseId = new IdField.Definition
        {
            MappedField = Bases.Id,
            IsReadOnly = true
        };

        public static readonly TextField Name = new TextField.Definition
        {
            MaximumLength = 40,
            IsReadOnly = true
        };

        public static readonly BooleanField IsPrimaryFace = new BooleanField.Definition
        {
            IsReadOnly = true
        };

        public static readonly PrimaryKey PK = new PrimaryKey.Definition
        {
            Fields = Id
        };

        public static readonly UniqueKey UQ1 = new UniqueKey.Definition
        {
            Fields = Name
        };

        public static readonly UniqueKey UQ2 = new UniqueKey.Definition
        {
            Fields = FieldReference.List(BaseId, IsPrimaryFace)
        };

        public static readonly UniqueKey UQ3 = new UniqueKey.Definition
        {
            Fields = FieldReference.List(Id, BaseId)
        };

        public static readonly ForeignKey FK1 = new ForeignKey.Definition
        {
            Fields = BaseId,
            ReferencedKey = Bases.PK
        };
    }
}
