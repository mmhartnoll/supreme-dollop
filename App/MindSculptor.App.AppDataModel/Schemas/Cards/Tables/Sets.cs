using MindSculptor.DataAccess.Modelled.Records;
using MindSculptor.DataAccess.Modelled.Records.Fields;
using MindSculptor.DataAccess.Modelled.Records.Keys;
using MindSculptor.DataAccess.Modelled.Schemas;

namespace MindSculptor.App.AppDataModel.Schemas.Cards.Tables
{
    public class Sets : RecordDefinition
    {
        public override Schema Schema => MindSculptorDataModel.Cards;

        public static IdField Id = new IdField.Definition
        {
            IsAutoGenerated = true,
            IsReadOnly = true
        };

        public static TextField Name = new TextField.Definition
        {
            MinimumLength = 1,
            MaximumLength = 42,
            IsReadOnly = true
        };

        public static TextField Code = new TextField.Definition
        {
            MinimumLength = 3,
            MaximumLength = 3,
            IsReadOnly = true
        };

        public static TextField CodeExtension = new TextField.Definition
        {
            MinimumLength = 3,
            MaximumLength = 3,
            IsNullable = true,
            IsReadOnly = true
        };

        public static IntegerField ReleaseYear = new IntegerField.Definition
        {
            MinimumValue = 1993,
            MaximumValue = 2100,
            IsReadOnly = true
        };

        public static IntegerField ReleaseMonth = new IntegerField.Definition
        {
            MinimumValue = 1,
            MaximumValue = 12,
            IsReadOnly = true
        };

        public static IntegerField ReleaseDay = new IntegerField.Definition
        {
            MinimumValue = 1,
            MaximumValue = 31,
            IsNullable = true,
            IsReadOnly = true
        };

        public static PrimaryKey PK = new PrimaryKey.Definition
        {
            Fields = Id
        };

        public static UniqueKey UQ1 = new UniqueKey.Definition
        {
            Fields = Name
        };

        public static UniqueKey UQ2 = new UniqueKey.Definition
        {
            Fields = FieldReference.List(Code, CodeExtension)
        };
    }
}
